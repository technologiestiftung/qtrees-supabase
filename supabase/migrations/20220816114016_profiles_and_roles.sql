CREATE TYPE public.app_permission AS enum (
    'tree.update'
);

CREATE TYPE public.app_role AS enum (
    'admin',
    'editor',
    'viewer'
);

CREATE TABLE public.profiles (
    id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    username text
);

CREATE TABLE public.role_permissions (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    ROLE app_role NOT NULL,
    permission app_permission NOT NULL
);

CREATE TABLE public.user_roles (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id uuid NOT NULL,
    ROLE app_role NOT NULL
);

CREATE UNIQUE INDEX profiles_pkey ON public.profiles USING btree (id);

CREATE UNIQUE INDEX profiles_username_key ON public.profiles USING btree (username);

CREATE UNIQUE INDEX role_permissions_pkey ON public.role_permissions USING btree (id);

CREATE UNIQUE INDEX role_permissions_role_permission_key ON public.role_permissions USING btree (ROLE, permission);

CREATE UNIQUE INDEX user_name_case_insensitive ON public.profiles USING btree (lower(username));

CREATE UNIQUE INDEX user_roles_pkey ON public.user_roles USING btree (id);

CREATE UNIQUE INDEX user_roles_user_id_role_key ON public.user_roles USING btree (user_id, ROLE);

ALTER TABLE public.profiles
    ADD CONSTRAINT profiles_pkey PRIMARY KEY USING INDEX profiles_pkey;

ALTER TABLE public.role_permissions
    ADD CONSTRAINT role_permissions_pkey PRIMARY KEY USING INDEX role_permissions_pkey;

ALTER TABLE public.user_roles
    ADD CONSTRAINT user_roles_pkey PRIMARY KEY USING INDEX user_roles_pkey;

ALTER TABLE public.profiles
    ADD CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users (id) ON DELETE CASCADE NOT valid;

ALTER TABLE public.profiles validate CONSTRAINT profiles_id_fkey;

ALTER TABLE public.profiles
    ADD CONSTRAINT profiles_username_key UNIQUE USING INDEX profiles_username_key;

ALTER TABLE public.profiles
    ADD CONSTRAINT special_char CHECK ((username ~* '^[a-za-z0-9_-]*$'::text)) NOT valid;

ALTER TABLE public.profiles validate CONSTRAINT special_char;

ALTER TABLE public.profiles
    ADD CONSTRAINT username_length CHECK ((char_length(username) >= 3)) NOT valid;

ALTER TABLE public.profiles validate CONSTRAINT username_length;

ALTER TABLE public.role_permissions
    ADD CONSTRAINT role_permissions_role_permission_key UNIQUE USING INDEX role_permissions_role_permission_key;

ALTER TABLE public.user_roles
    ADD CONSTRAINT user_roles_user_id_fkey FOREIGN KEY (user_id) REFERENCES profiles (id) ON DELETE CASCADE NOT valid;

ALTER TABLE public.user_roles validate CONSTRAINT user_roles_user_id_fkey;

ALTER TABLE public.user_roles
    ADD CONSTRAINT user_roles_user_id_role_key UNIQUE USING INDEX user_roles_user_id_role_key;

